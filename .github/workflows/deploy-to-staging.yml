name: Deploy to Staging

on:
  push:
    branches: [testovi]

env:
  STAGING_ENV: staging

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: ${{ secrets.NODE_VERSION }}
    steps:
      - uses: actions/checkout@v3

      - name: Create and prepare .staging.env file
        run: |
          touch .staging.env
          chmod 600 .staging.env

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Insert environment variables into .staging.env
        run: |
          echo "NODE_ENV=$NODE_ENV" >> .staging.env
          echo "NODE_VERSION=$NODE_VERSION" >> .staging.env
          echo "PORT=$PORT" >> .staging.env
          echo "BASE_URL_CLIENT=$BASE_URL_CLIENT" >> .staging.env
          echo "BASE_URL_SERVER=$BASE_URL_SERVER" >> .staging.env
          echo "CLOUDINARY_API_KEY=$CLOUDINARY_API_KEY" >> .staging.env
          echo "CLOUDINARY_API_SECRET=$CLOUDINARY_API_SECRET" >> .staging.env
          echo "CLOUDINARY_CLOUD_NAME=$CLOUDINARY_CLOUD_NAME" >> .staging.env
          echo "DATABASE_URL_PG=$DATABASE_URL_PG" >> .staging.env
          echo "GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID" >> .staging.env
          echo "GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET" >> .staging.env
          echo "SESSION_NAME=$SESSION_NAME" >> .staging.env
          echo "SESSION_SECRET=$SESSION_SECRET" >> .staging.env

      - name: Log .staging.env contents
        run: |
          cat .staging.env

      - name: Install pnpm
        run: npm install -g pnpm

      - uses: actions/cache@v3
        with:
          path: ~/.pnpm
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - run: pnpm install
      - run: pnpm run staging:set
      - run: pnpm run staging
