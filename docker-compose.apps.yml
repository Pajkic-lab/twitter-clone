services:
  client:
    restart: always
    build:
      context: .
      dockerfile: ./apps/client/Dockerfile
      target: development
    image: twitter-clone:client
    depends_on:
      server:
        condition: service_started
    ports:
      - ${SERVER_PORT:-4200}:4200
    volumes:
      - ./apps/client:/usr/src/app/apps/client
      - ./libs:/usr/src/app/libs
    env_file:
      - path: .env.example # defaults
        required: true
    environment:
      - NX_DAEMON=true
      - NX_BASE_URL_SERVER=http://localhost:3000/ # from browser to exposed server

  server:
    restart: always
    build:
      context: .
      dockerfile: ./apps/server/Dockerfile
      target: development
    image: twitter-clone:server
    depends_on:
      migrate:
        condition: service_completed_successfully
    ports:
      - ${SERVER_PORT:-3000}:5000
    volumes:
      - ./apps/server:/usr/src/app/apps/server
      - ./libs:/usr/src/app/libs
    env_file:
      - path: .env.example # defaults
        required: true
    environment:
      - NX_DAEMON=true
      - DATABASE_URL_PG=postgres://avnadmin:AVNS_0TU9ktE4pwBZ5bEgp-N@postgres-dev:5432/twitterclonetest6_dev

  migrate:
    restart: 'no'
    build:
      context: .
      dockerfile: ./apps/server/Dockerfile
      target: development
    image: twitter-clone:migrate
    command: sh -c "pnpm prisma migrate dev --schema=./apps/server/src/modules/prisma/schema.prisma"
    depends_on:
      postgres-dev:
        condition: service_healthy
    environment:
      - DATABASE_URL_PG=postgres://avnadmin:AVNS_0TU9ktE4pwBZ5bEgp-N@postgres-dev:5432/twitterclonetest6_dev

  postgres-dev:
    extends:
      file: ./docker-compose.yml
      service: postgres-dev
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U avnadmin -d twitterclonetest6_dev']
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

volumes:
  pgdata-dev:
